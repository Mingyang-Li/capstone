generator client {
  provider = "prisma-client-js"
}

generator prismaClassGenerator {
  provider = "prisma-class-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model Distance {
  id       Int       @id @default(autoincrement())
  dateTime DateTime? @db.Timestamp(6)
  value    Decimal?  @db.Decimal
  date     DateTime? @db.Date
  userId   Int?
  User     User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model Steps {
  id       Int       @id @default(autoincrement())
  dateTime DateTime? @db.Timestamp(6)
  date     DateTime? @db.Date
  value    Decimal?  @db.Decimal
  userId   Int?
  User     User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model User {
  id                Int                 @id @default(autoincrement())
  auth0Id           String?
  Calories          Calories[]
  Distance          Distance[]
  HeartRate         HeartRate[]
  Steps             Steps[]
  VeryActiveMinutes VeryActiveMinutes[]
}

model Calories {
  id       Int       @id @default(autoincrement())
  dateTime DateTime? @db.Timestamp(6)
  value    Decimal?  @db.Decimal
  userId   Int
  date     DateTime? @db.Date
  User     User      @relation(fields: [userId], references: [id], onUpdate: Restrict)
}

model HeartRate {
  id         Int       @id @default(autoincrement())
  dateTime   DateTime? @db.Timestamptz(6)
  bpm        Decimal?  @db.Decimal
  confidence Decimal?  @db.Decimal
  date       DateTime? @db.Timestamp(6)
  userId     Int?
  User       User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict)
}

model VeryActiveMinutes {
  id       Int       @id @default(autoincrement())
  dateTime DateTime? @db.Timestamptz(6)
  date     DateTime? @db.Timestamp(6)
  value    Decimal?  @db.Decimal
  userId   Int?
  User     User?     @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict)
}
